{
	"comandos" : {
		"cat" : {
			"comando" : "cat",
			"funcionalidad" : "muestra el contenido de fichero en el la pantalla. Puede mostrar el contenido de varios ficheros",
			"opciones" : {
				"-n" : "muestra el número de línea",
				"-b" : "igual que -n pero no numera líneas vacias o en blanco."
			}
		},
		"cd" : {
			"comando" : "cd",
			"funcionalidad" : "Sirve para cambiar de directorio / raiz ../ direcorio anterior  ../../ baja dos niveles."
		},
		"chgroup\r\n" : {
			"comando" : "chgroup",
			"funcionalidad" : "Change group, igual que chown pero solo con grupos.",
			"opciones\r\n" : {
				"-R" : "Aplica los cambios de modo recursivo",
				"-v" : "verbose",
				"-c" : "Muestra los cambios realizados."
			}
		},
		"chmod\r\n" : {
			"comando" : "chmod",
			"funcionalidad" : "Cambia los permisos de ficheros o directorios. La sintaxis es `chmod <permisos> <fichero/carpeta>` donde permiso puede ser octal (en número) o modo (letra). Ejemplo: `chmod 750 <filename>` o `chmod u=rwx,g=rx,g= <filename>`",
			"opciones\r\n" : {
				"-R" : "Aplica los cambios de modo recursivo",
				"-v" : "verbose",
				"-c" : "Muestra los cambios realizados."
			}
		},
		"chown\r\n" : {
			"comando" : "chown",
			"funcionalidad" : "Change owner. Sirve para modificar los permisos de un archivo carpeta o archivo. La sintaxis es `chown <propietario>:<grupo> <ficheros/carpetas>`. Ejemplo `chown juan:juan micarpeta`. Opciones de usuario grupo pueden ser: <usuario>, <ususario>:<grupo>, <usuario>.<grupo>, .<grupo> o :<grupo>. Solo lo puede ejecutar un usuario root.",
			"opciones\r\n" : {
				"-R" : "Aplica los cambios de modo recursivo",
				"-v" : "verbose",
				"-c" : "Muestra los cambios realizados."
			}
		},
		"clear\r\n" : {
			"comando" : "clear",
			"funcionalidad" : "o ctrl+L limpia de comandos la pantalla."
		},
		"cp\r\n" : {
			"comando" : "cp",
			"funcionalidad" : "Copia de fuente a destino archivos se pueden especificar varios origenes y un destino.",
			"opciones\r\n" : {
				"-r" : "copia recursivamente el contenido de las carpetas a copiar"
			}
		},
		"cut\r\n" : {
			"comando" : "cut",
			"funcionalidad" : "corta o separa por columnas el contenido de un fichero",
			"opciones\r\n" : {
				"-d" : "indica el delimitador entre columnas. ej. si es ';' la opción -d;",
				"-f" : "selecciona el número de columnas a visualizar ej. -f3 tercera columna -f3,4 tercera y cuarta, -f2-5 de la dos a la cinco, etc.",
				"-c" : "especifica los caracteres a cortar ej. -c 2 coge dos caracteres -c 9-10 coge los caracteres del 9 al 20."
			}
		},
		"echo" : {
			"comando" : "echo",
			"funcionalidad" : " Muestra en la salida extandar el texto o file que se indique. Se puede usar este comando para crear un fichero redireccionando la salida. ej. `echo \"hello\" > myfile.txt`."
		},
		"history" : {
			"comando" : "history",
			"funcionalidad" : "No requiere argumentos. Muestras información del sistema. Por defecto muestra historial de comandos (se almacena en .bash_history oculto en el $HOME)",
			"opciones" : {
				"-c" : "limpia el historial pero no borra .bash_history",
				"-w" : "comienza la escritura del historial en .bash_history"
			}
		},
		"hostname\r\n" : {
			"comando" : "hostname",
			"funcionalidad" : "muestra el servidor actual"
		},
		"locate\r\n" : {
			"comando" : "locate",
			"funcionalidad" : "Este comando sirve para localizar archivos introduciendo un pattern. ejemplo `locate *.conf`. Juega en conjunto con `updatedb` para actualizar la base de datos. Ojo en algunas versiones de linux no viene instalado. Para instalarlo estas dos líneas con sudo `sudo apt install locate` y `sudo apt install mlocate`. Ver `updatedb` ",
			"opciones" : {
				"-i" : "Localiza sin tener en cuenta mayusculas o minusculas.",
				"-l" : "(--limit) Limita el muestreo de resultados al número indicado detras (`-l 3` tres resultados).",
				"-S" : "obtiene la ubicación de la base de datos que usa mlocate.",
				"-e" : "antes de mostrar resultados comprueba que los ficheros existan por si la base no está actualizada.\r\n"
			}
		},
		"ln" : {
			"comando" : "ln",
			"funcionalidad" : "Crear enlaces simbólicos o duros. Si no se especifican opciones crea un enlace duro.",
			"opciones" : {
				"-s" : "Junto con la ruta del fichero o directorio para crear enlaces simbólicos. Ejemplo: ln -s <fichero o carpeta ref> <fichero simbólico."
			}
		},
		"ls" : {
			"comando" : "ls",
			"funcionalidad" : "Lista los contenidos del directorio actual o de otro si se le indica, ejemplo `ls /lib`.",
			"opciones" : {
				"-l" : "Muestra una lista ordenada",
				"-a" : "Muestra ficheros y carpetas ocultos (en linux empiezan por .)",
				"-i" : "Muestra la ubicación física del archivo en la primera columna",
				"-R" : "Muestra resultados recursivos dendro de la carpeta que se solicite\r\n"
			}
		},
		"man" : {
			"comando" : "man",
			"funcionalidad" : " manual de comando. Sintaxis man [sección] comando o directorio. Ejemplo: man 5 passwd",
			"secciones\r\n" : {
				"1" : "comandos generales",
				"2" : "llamadas al sistema",
				"3" : "biblioteca (funciones)",
				"4" : "Fiheros especiales",
				"5" : " Formato de ficheros",
				"6" : "Juegos y salvapantallas",
				"7" : "miscelánea",
				"8" : "comandos de administracion sistema"
			}
		},
		"mkdir" : {
			"comando" : "mkdir",
			"funcionalidad" : "Crea una carpeta sintaxis `mkdir foldername` donde foldername puede ser un path relativo o absoluto.",
			"opciones" : {
				"-p" : "Crea la carpeta aunque no exista el folder contenedor. Es decir, crea la ruta completa que especifiquemos"
			}
		},
		"mv\r\n" : {
			"comando" : "mv",
			"funcionalidad" : "Se utiliza para renombrar ficheroa mv oldname.txt newname.txt se aplica tambien a carpetas y no afecta a contenidos de la carpeta. Tambien se utiliza para mover ficheros o carpetas de un sitio a otro o para mover y cambiar de nombre al mismo tiempo. Es un comando superpoderoso."
		},
		"nl\r\n" : {
			"comando" : "nl",
			"funcionalidad" : "muestra el fichero con lineas numeradas. No numera lineas en blanco igual que cat -b",
			"opciones" : {
				"-ba" : "si se pone numera también líneas en blanco"
			}
		},
		"pwd\r\n" : {
			"comando" : "pwd",
			"funcionalidad" : "muestra el directorio actual",
			"opciones\r\n" : {
				"-P" : " muestra el directorio de origen en el caso de un simbolic link."
			}
		},
		"rm\r\n\r\n" : {
			"comando" : "rm",
			"funcionalidad" : "Elimina ficheros admite opciones y multiples files. Admite paths absolutos o relativos. Admite wildcards o patterns para filtrar ficheros. ",
			"opciones" : {
				"-r" : "borra recursivamente directorios y todo.",
				"-ri" : "borrado interactivo pero preguntando en interactivo si quermos eliminar cada carpeta"
			}
		},
		"rmdir\r\n\r\n" : {
			"comando" : "rmdir",
			"funcionalidad" : "Elimina carpetas en lugar de ficheros en SOLAMENTE si estan vacias."
		},
		"stat\r\n" : {
			"comando" : "stat",
			"funcionalidad" : "Nos muestra información sobre un fichero concreto. Fecha de creación de acceso propietario etc."
		},
		"tac" : {
			"comando" : "tac",
			"funcionalidad" : "igual que cat pero muestra las lineas del fichero en orden inverso"
		},
		"touch" : {
			"comando" : "touch",
			"funcionalidad" : "Crea un archivo sintaxis `touch filename` donde filename puede ser en path relativo o absoluto. Si el fichero ya existe cambia la fecha de creación del fichero. Usando opciones se pueden modificar las fechas de fichero.",
			"opciones" : {
				"-a" : "Cambia la fecha de acceso.",
				"-m" : "Cambia la fecha de modificación.",
				"`-d` + ` <fecha>`" : "especifica una fecha concreta."
			}
		},
		"updatedb" : {
			"comando" : "updatedb",
			"funcionalidad" : "Funciona conjuntamente con `locate` sirve para actualizar la base de datos de búsqueda de ficheros. Solo lo puede ejecutar su."
		},
		"umask" : {
			"comando" : "umask",
			"funcionalidad" : "Muestra o modifica la máscara utilizada cuando creamos ficheros o directorios. Cada usuario tiene una máscara para creación de ficheros. Solo `umask` muestra la máscara actual y con `umask <mascara>` cambia a la especificada. La máscara son 4 dígitos tomamos los ultimos 3 y de ellos el primero esta asociado a usuario el segundo a grupo y el tercero a otros. Esos tres dígitos se restan de 666 (máximos permisos) para ficheros y de 777 (maximos permisos) para carpetas y nos darán los permisos. Ej. si la umask es 022 los permisos para ficheros son 666-022 = 644 y para carpetas 777-022 = 755. Se aplica a los ficheros creados después de ejecutar umask."
		},
		"uname" : {
			"comando" : "uname",
			"funcionalidad" : "No requiere argumentos. Muestras información del sistema. Por defecto opcion -s nombe del Kernel (Linux).",
			"opciones" : {
				"-s" : "nombre del nucleo",
				"-r" : "version del nucleo",
				"-v" : "version del sistema operativo",
				"-n" : "nombre de la maquina",
				"-m" : "bits del nucleo",
				"-a" : "toda la información"
			}
		},
		"whoami\r\n" : {
			"comando" : "muestra el usuario actual",
			"funcionalidad" : "muestra el directorio actual"
		}
	},
	"specialchar" : {
		"\\" : "escape para caracteres especiales individuales",
		"*" : " comodín multiples caracteres",
		"?" : "comodín caracter simple",
		"[]" : " especificacion de rangos",
		"\"\"" : "escapes para strings",
		"''" : "escapes para strings",
		">" : "redireccionar salida",
		"<" : "redireccionar entrada",
		";" : "separa comandos en la misma linea comando1; comando2; etc",
		"&" : " ejecución en segundo plano comando1 &",
		"&&" : "ejecución consecutiva de comandos: comando1 && comando2. El segundo se ejecuta solo si el primero acabo sin errores",
		"|" : "Pasa la salida del primer comando a la entrada del segundo. Muy importante es el comando pipe comando1 | comando2",
		"||" : "ejecución consecutiva de comandos: comando1 || comando2. El segundo se ejecuta solo si el primero ha fallado.",
		"~" : "Identifica el directorio home del usuario: ls ~ (Alt gr +  4)",
		"``" : "Ejecutar el comando incluido `comando`. Util en batch.",
		"$" : "Identifica varialbes del sitema ej. $HOME o ejecuta comandos $(comando1)",
		"!" : "Ejecuta el comando indicado del buffer !5 (comando cinco del buffer). Caso especial !! ultimo comando ejecutado."
	}
}
